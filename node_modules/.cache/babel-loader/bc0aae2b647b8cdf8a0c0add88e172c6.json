{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Bar\\\\Desktop\\\\Code\\\\CoinmamaHomeTask\\\\cryptorates-app-fixed\\\\src\\\\components\\\\pages\\\\Prices\\\\Prices.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { backendAPIAxios } from '../../../utils/http';\nimport PricesView from './Prices.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Prices = props => {\n  _s();\n\n  const [pricesState, setPricesState] = useState(null);\n\n  const pricesChangeHandler = value => setPricesState(() => value);\n\n  const [isSetIntervalActivateState, setIsSetIntervalActivateState] = useState(false);\n  backendAPIAxios.get(`/prices`).then(() => {\n    props.prices(pricesState);\n  });\n  console.log(setPricesState);\n  return /*#__PURE__*/_jsxDEV(PricesView, {\n    prices: pricesState,\n    pricesChangeHandler: pricesChangeHandler,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Prices, \"03DuvqcKPGNJ8lkVKY6+qcMrx5k=\");\n\n_c = Prices;\nPrices.displayName = 'Prices';\nPrices.defaultProps = {};\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["C:/Users/Daniel Bar/Desktop/Code/CoinmamaHomeTask/cryptorates-app-fixed/src/components/pages/Prices/Prices.tsx"],"names":["React","useState","backendAPIAxios","PricesView","Prices","props","pricesState","setPricesState","pricesChangeHandler","value","isSetIntervalActivateState","setIsSetIntervalActivateState","get","then","prices","console","log","children","displayName","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SAASC,eAAT,QAAgC,qBAAhC;AAMA,OAAOC,UAAP,MAAuB,eAAvB;;;AAMA,MAAMC,MAAuB,GAAIC,KAAD,IAA2C;AAAA;;AAEzE,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAiB,IAAjB,CAAhD;;AAEA,QAAMO,mBAAmB,GAAIC,KAAD,IAA2BF,cAAc,CAAC,MAAME,KAAP,CAArE;;AAEA,QAAM,CAAEC,0BAAF,EAA8BC,6BAA9B,IAAgEV,QAAQ,CAAU,KAAV,CAA9E;AAEAC,EAAAA,eAAe,CAACU,GAAhB,CAAqB,SAArB,EACGC,IADH,CACQ,MAAM;AACVR,IAAAA,KAAK,CAACS,MAAN,CAAaR,WAAb;AACH,GAHD;AAKAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,MAAM,EAAED,WADV;AAEE,IAAA,mBAAmB,EAAEE,mBAFvB;AAAA,cAGEH,KAAK,CAACY;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArBD;;GAAMb,M;;KAAAA,M;AAuBNA,MAAM,CAACc,WAAP,GAAqB,QAArB;AACAd,MAAM,CAACe,YAAP,GAAsB,EAAtB;AAEA,eAAef,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\n\nimport { backendAPIAxios } from '../../../utils/http';\n\nimport { IResponse } from '../../../models/response/crypto';\n\nimport { ICrypto } from '../../../models/crypto';\n\nimport PricesView from './Prices.view';\n\ninterface Props {\n  readonly prices: (value: ICrypto) => void;\n}\n\nconst Prices: React.FC<Props> = (props: React.PropsWithChildren<Props>) => {\n\n  const [ pricesState, setPricesState ] = useState<ICrypto | null>(null);\n\n  const pricesChangeHandler = (value: ICrypto | null) => setPricesState(() => value);\n\n  const [ isSetIntervalActivateState, setIsSetIntervalActivateState ] = useState<boolean>(false);\n\n  backendAPIAxios.get(`/prices`)\n    .then(() => {\n      props.prices(pricesState!);\n  });\n\n  console.log(setPricesState);\n\n  return (\n    <PricesView\n      prices={pricesState}\n      pricesChangeHandler={pricesChangeHandler}\n    >{props.children}</PricesView>\n  );\n};\n\nPrices.displayName = 'Prices';\nPrices.defaultProps = {};\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}